/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package i_mat.center_stage;

import i_mat.IMat;
import i_mat.model.Model;
import i_mat.utilities.ColorScheme;
import i_mat.utilities.GUIConstants;
import i_mat.utilities.ListOrder;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.border.Border;
import javax.swing.BorderFactory;
import javax.swing.JComponent;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;
import se.chalmers.ait.dat215.project.IMatDataHandler;
import se.chalmers.ait.dat215.project.Product;
import se.chalmers.ait.dat215.project.ShoppingItem;

/**
 *
 * @author Hjort
 */
public class ProductThumbnail extends javax.swing.JPanel {
    
    private Border selectedBorder = BorderFactory.createLineBorder(ColorScheme.getSelectedProductBorderColor(), 1, true);
    private Border unselectedBorder = BorderFactory.createEmptyBorder(1,1,1,1);
    private boolean isSelected = false;
    
    private final Product product;
    /**
     * Creates new form ProductThumbnail
     */
    public ProductThumbnail() {
        this(Model.getTestProduct());
    }

    /**
     * Create new thumbnail for given product.
     * @param p 
     */
    public ProductThumbnail(Product p) {
        this.product = p;
        initComponents();
        this.validate();
        for (final ListOrder l : Model.getShoppingLists()) {
            AddToListMenuItem m = new AddToListMenuItem(l);
            m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemToList(l);
            }
        });
            this.addToListMenu.add(m);
        }
    }
    
    public Product getProduct() {
        return this.product;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        makeFavoriteMenuItem = new javax.swing.JMenuItem();
        addToListMenu = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        removeForeverMenuItem = new javax.swing.JMenuItem();
        imageButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(32767, 5));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));

        makeFavoriteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.META_MASK));
        makeFavoriteMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/star.gif"))); // NOI18N
        makeFavoriteMenuItem.setText(favoriteMenueItemText());
        makeFavoriteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeFavoriteMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(makeFavoriteMenuItem);

        addToListMenu.setText("Lägg i lista…");
        jPopupMenu1.add(addToListMenu);
        jPopupMenu1.add(jSeparator1);

        removeForeverMenuItem.setText("Visa aldrig varan igen");
        removeForeverMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeForeverMenuItemActionPerformed(evt);
            }
        });
        jPopupMenu1.add(removeForeverMenuItem);

        setBackground(ColorScheme.selectedThumbnailBackground());
        setBorder(this.unselectedBorder);
        setMaximumSize(GUIConstants.PRODUCT_THUMBNAIL_SIZE);
        setMinimumSize(GUIConstants.PRODUCT_THUMBNAIL_SIZE);
        setOpaque(false);
        setPreferredSize(GUIConstants.PRODUCT_THUMBNAIL_SIZE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        imageButton.setIcon(Model.getImageIconForProduct(this.product, GUIConstants.THUMBNAIL_SIZE)
        );
        imageButton.setToolTipText("");
        imageButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        imageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                imageButtonMousePressed(evt);
            }
        });
        imageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageButtonActionPerformed(evt);
            }
        });

        nameLabel.setFont(nameLabel.getFont().deriveFont((nameLabel.getFont().getStyle() & ~java.awt.Font.ITALIC) | java.awt.Font.BOLD, nameLabel.getFont().getSize()+2));
        nameLabel.setText(this.product.getName());

        jLabel2.setFont(jLabel2.getFont().deriveFont((jLabel2.getFont().getStyle() | java.awt.Font.ITALIC) & ~java.awt.Font.BOLD, jLabel2.getFont().getSize()-2));
        jLabel2.setText(this.product.getPrice() + " kr");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        jLabel4.setText(this.product.getUnitSuffix());

        jButton1.setText("K");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(filler4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jButton1)))
                    .addComponent(filler4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void imageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageButtonActionPerformed
    }//GEN-LAST:event_imageButtonActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
    }//GEN-LAST:event_formMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.addThisToShoppingCart();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void imageButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageButtonMousePressed
        //Check that Cmd is pressed (or Ctrl on Windows)
        if (evt.getModifiers() == Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()) {
            this.jPopupMenu1.show(this, evt.getX(), evt.getY());
        } else 
        if ((evt.getModifiers() & Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())
        == Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()) {
            this.switchSelectedStatus();
        }
        else {
            this.openProductView();
        }
    }//GEN-LAST:event_imageButtonMousePressed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        if (evt.getModifiers() == InputEvent.CTRL_DOWN_MASK) {
            this.switchSelectedStatus();
        }        
    }//GEN-LAST:event_formMousePressed

    private void makeFavoriteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeFavoriteMenuItemActionPerformed
           if (Model.isFavorite(this.product)) Model.removeFromFavorites(this.product);
           else Model.addToFavorites(this.product);
           this.setUnselected();
           this.makeFavoriteMenuItem.setText(this.favoriteMenueItemText());
    }//GEN-LAST:event_makeFavoriteMenuItemActionPerformed

    private void removeForeverMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeForeverMenuItemActionPerformed
        Model.removeProductForever(this.product);        // TODO add your handling code here:
    }//GEN-LAST:event_removeForeverMenuItemActionPerformed

    private void addItemToList(ListOrder l) {
        Model.addItemToShoppingList(l, this.getShoppingItem());
    }
    
    private String favoriteMenueItemText() {
        String s = Model.isFavorite(this.product) ? "Ta bort från favoriter" : "Gör till favorit";
        return s;
    }
    
    public void addThisToShoppingCart() {
         Model.addShoppingItem(this.getShoppingItem());
         this.jSpinner1.setValue(1);
    }
    
    public void openProductView() {
        IMat.setCenterStage(new ProductFullView(this.product));
    }
    
    private void switchSelectedStatus(){
        if (this.isSelected) this.setUnselected();
        else this.setSelected();
    }
    
    public void setUnselected() {
        this.isSelected = false;
        this.setBorder(this.unselectedBorder);
        this.setOpaque(false);
        this.repaint();
    }
    
    public void setSelected() {
        this.isSelected = true; 
        this.setBorder(this.selectedBorder);
        this.setOpaque(true);
        this.repaint();
    }

    public boolean isSelected() {
        return this.isSelected;
    }    
    
    public ShoppingItem getShoppingItem() {
        Object o = jSpinner1.getValue();
        Number value = new Double(1);
        if (o instanceof Number) {
            value = (Number)o;
        }
        return new ShoppingItem(product, value.doubleValue());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu addToListMenu;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JButton imageButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JMenuItem makeFavoriteMenuItem;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JMenuItem removeForeverMenuItem;
    // End of variables declaration//GEN-END:variables
}
