/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package i_mat.center_stage;

import java.util.Comparator;
import se.chalmers.ait.dat215.project.Product;

/**
 *
 * @author Hjort
 */
public class SortSearchPanel extends javax.swing.JPanel {

    /**
     * Creates new form SortSearchPanel
     */
    public SortSearchPanel() {
        initComponents();
    }

    Comparator<Product> getSorting() {
        int i = this.jComboBox1.getSelectedIndex();
        switch(i) {
            //Namn A-Ö
            case 1 :
                return new Comparator<Product>() {
                    @Override
                    public int compare(Product p1, Product p2) {
                        return p1.getName().compareTo(p2.getName());
                    }
                };
            
            case 2 :
                return new Comparator<Product>() {
                    @Override
                    public int compare(Product p1, Product p2) {
                        return -p1.getName().compareTo(p2.getName());
                    }
                };
            case 3:
                return new Comparator<Product>() {
                    @Override
                    public int compare(Product p1, Product p2) {
                        return Double.compare(p1.getPrice(), p2.getPrice());
                    }
                };
            case 4:
                return new Comparator<Product>() {
                    @Override
                    public int compare(Product p1, Product p2) {
                        return -Double.compare(p1.getPrice(), p2.getPrice());
                    }
                };
        }
        return new Comparator<Product>() {
            @Override
            public int compare(Product p1, Product p2) {
                return p1.getProductId()-p2.getProductId();
            }
        };
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();

        setMaximumSize(new java.awt.Dimension(20, 32767));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(160, 34));
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Relevans", "Namn (A-Ö)", "Namn (Ö-A)", "Pris (lågt-högt)", "Pris (högt–lågt)" }));
        jComboBox1.setMaximumSize(new java.awt.Dimension(50, 32767));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox1PropertyChange(evt);
            }
        });
        add(jComboBox1);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
         this.firePropertyChange("Sort", null, evt);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox1PropertyChange
        
    }//GEN-LAST:event_jComboBox1PropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    // End of variables declaration//GEN-END:variables
}
