/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package i_mat.center_stage.checkout;
import i_mat.IMat;
import i_mat.center_stage.home.ViewHomePanel;
import i_mat.controllers.PaymentController;
import i_mat.controllers.AddressController;
import i_mat.model.CreditCardInstance;
import i_mat.model.DeliveryAddress;
import javax.swing.*;
import i_mat.model.Model;
import static i_mat.model.Model.addCreditCard;
import static i_mat.model.Model.addDeliveryAddress;
import static i_mat.model.Model.getAddress;
import static i_mat.model.Model.getAddressByAddress;
import static i_mat.model.Model.getCreditCardByNum;
import i_mat.utilities.ColorScheme;

import java.util.List;
import se.chalmers.ait.dat215.project.Customer;
import se.chalmers.ait.dat215.project.IMatDataHandler;
import se.chalmers.ait.dat215.project.ShoppingCart;
import java.util.UUID;

/**
 *
 * @author Hjort
 */

public class CheckoutPanel extends javax.swing.JPanel {
    
    //private static final IMatDataHandler iMatDataHandler = IMatDataHandler.getInstance();
    ShoppingCart cart;
    ThankYouPanel p1;
    DeliveryAddress deliv;
    Customer tempCust;
    String genId, uuid, uuid2, cardNum,id1,id2;
    String[] active, active2, active3, numArr,idArray, cardArray;
    PaymentController paymentController = PaymentController.getInstance();
    AddressController addressController = AddressController.getInstance();
    /**
     * Creates new form CheckoutPanel
     * @param deliveryAddresses
     * @param creditCards
     */
    public CheckoutPanel(List<DeliveryAddress> deliveryAddresses, List<CreditCardInstance> creditCards) {
        initComponents();
        
        idArray = new String[deliveryAddresses.size()];
        for(int i = 0; i < deliveryAddresses.size();i++){
            idArray[i] = deliveryAddresses.get(i).getAddress();
        }
        selectedAddress.setModel(new DefaultComboBoxModel(idArray));
        
        cardArray = new String[creditCards.size()];
        for(int i = 0; i < creditCards.size();i++){
            cardArray[i] = creditCards.get(i).getCardNumber();
        }
        cardNumber.setModel(new DefaultComboBoxModel(cardArray));
        
        
        this.setEnabledDeliveryAdresses(deliveryAddresses.size());
        this.setEnabledCardAdresses(creditCards.size());
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addressButtonGroup = new javax.swing.ButtonGroup();
        paymentButtonGroup = new javax.swing.ButtonGroup();
        deliveryButtonGroup = new javax.swing.ButtonGroup();
        jLabel24 = new javax.swing.JLabel();
        oldAdressButton = new javax.swing.JRadioButton();
        newAdressButton = new javax.swing.JRadioButton();
        selectedAddress = new javax.swing.JComboBox();
        oldCardButton = new javax.swing.JRadioButton();
        newCardButton = new javax.swing.JRadioButton();
        cardNumber = new javax.swing.JComboBox();
        purchase = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        firstNL = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lastNL = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        AddressLabel = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        postCodeLab = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cityLabel = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JTextField();
        cellLabel = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        emailLabel = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel26 = new javax.swing.JLabel();
        cardNumberErrorLabel = new javax.swing.JLabel();
        cvcErrorLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        jLabel24.setText("(required)");
        jLabel24.setEnabled(false);

        setBackground(ColorScheme.getStandardPanelBackground());

        addressButtonGroup.add(oldAdressButton);
        oldAdressButton.setSelected(true);
        oldAdressButton.setText("Skicka till:");
        oldAdressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldAdressButtonActionPerformed(evt);
            }
        });

        addressButtonGroup.add(newAdressButton);
        newAdressButton.setText("Ny adress…");
        newAdressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAdressButtonActionPerformed(evt);
            }
        });

        selectedAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedAddressActionPerformed(evt);
            }
        });

        paymentButtonGroup.add(oldCardButton);
        oldCardButton.setSelected(true);
        oldCardButton.setText("Sparat kort med nr.");
        oldCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldCardButtonActionPerformed(evt);
            }
        });

        paymentButtonGroup.add(newCardButton);
        newCardButton.setText("Nytt kort...");
        newCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCardButtonActionPerformed(evt);
            }
        });

        cardNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardNumberActionPerformed(evt);
            }
        });

        purchase.setBackground(ColorScheme.checkoutButtonBackground());
        purchase.setForeground(ColorScheme.checkoutButtonForeground());
        purchase.setText("Genomför köp");
        purchase.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        purchase.setMargin(new java.awt.Insets(5, 5, 5, 5));
        purchase.setOpaque(true);
        purchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseActionPerformed(evt);
            }
        });

        jLabel1.setText("Förnamn:");

        firstNL.setText("Jonas");
        firstNL.setEnabled(false);
        firstNL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNLActionPerformed(evt);
            }
        });

        jLabel2.setText("Efternamn:");

        lastNL.setText("Petterson");
        lastNL.setEnabled(false);
        lastNL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNLActionPerformed(evt);
            }
        });

        jLabel3.setText("Adress:");

        AddressLabel.setText("Nånstansibergen 2");
        AddressLabel.setEnabled(false);

        jLabel4.setText("Postkod:");

        postCodeLab.setText("441 22");
        postCodeLab.setEnabled(false);

        jLabel5.setText("Stad:");

        cityLabel.setText("Göteborg");
        cityLabel.setEnabled(false);
        cityLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityLabelActionPerformed(evt);
            }
        });

        jLabel6.setText("Mobil:");

        jLabel7.setText("Telefon:");

        phoneLabel.setText("087658472");
        phoneLabel.setEnabled(false);

        cellLabel.setText("0705869632");
        cellLabel.setEnabled(false);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Korttyp:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Visa", "MasterCard" }));
        jComboBox1.setEnabled(false);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Kortnummer:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Giltigt tom:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jComboBox2.setEnabled(false);
        jComboBox2.setPreferredSize(new java.awt.Dimension(40, 20));

        jLabel11.setText("/");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020" }));
        jComboBox3.setEnabled(false);
        jComboBox3.setMinimumSize(new java.awt.Dimension(45, 20));
        jComboBox3.setPreferredSize(new java.awt.Dimension(40, 20));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Cvc-kod:");

        jTextField9.setEnabled(false);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Innehavare:");

        jTextField10.setEnabled(false);

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Spara adress");
        jCheckBox1.setEnabled(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Email:");

        emailLabel.setText("Jonas@testmail.com");
        emailLabel.setEnabled(false);

        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Spara kort");
        jCheckBox2.setEnabled(false);

        jButton1.setText("Avbryt");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jTextField2.setEnabled(false);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jTextField3.setEnabled(false);
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jTextField4.setEnabled(false);
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jLabel17.setText("*");
        jLabel17.setEnabled(false);

        jLabel18.setText("*");
        jLabel18.setEnabled(false);

        jLabel19.setText("* ");
        jLabel19.setEnabled(false);

        jLabel20.setText("*");
        jLabel20.setEnabled(false);

        jLabel21.setText("*");
        jLabel21.setEnabled(false);

        jLabel22.setText("*");
        jLabel22.setEnabled(false);

        jLabel23.setText("*");
        jLabel23.setEnabled(false);

        jLabel25.setText("*");
        jLabel25.setEnabled(false);

        jLabel26.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel26.setText("Fält markerade med * är obligatoriska");
        jLabel26.setEnabled(false);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Välj kort:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(7, 7, 7)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cvcErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel17))
                                        .addComponent(newCardButton)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jCheckBox2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cardNumberErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(oldCardButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jCheckBox1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel6)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel3))
                                                .addComponent(jLabel14))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(AddressLabel)
                                                .addComponent(emailLabel)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(postCodeLab)
                                                        .addComponent(cellLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                                                    .addGap(30, 30, 30)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel5)
                                                        .addComponent(jLabel7))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(cityLabel)
                                                        .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(purchase, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newAdressButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(oldAdressButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectedAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstNL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(6, 6, 6)
                                .addComponent(lastNL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25)))))
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldAdressButton)
                    .addComponent(selectedAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newAdressButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(firstNL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(AddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(postCodeLab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cellLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldCardButton)
                    .addComponent(cardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newCardButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(cardNumberErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addComponent(jLabel12))
                    .addComponent(cvcErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(purchase, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void oldAdressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldAdressButtonActionPerformed
        //this.newAddressPanel = null;
        selectedAddress.setEnabled(true);
        setShowingAddress();
        setTextEnabled(false,1);
        this.validate();
    }//GEN-LAST:event_oldAdressButtonActionPerformed

    private void selectedAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedAddressActionPerformed
        // TODO add your handling code here:
        setShowingAddress();
    }//GEN-LAST:event_selectedAddressActionPerformed

    private void newAdressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAdressButtonActionPerformed
        selectedAddress.setEnabled(false);
        clearShowingAddress();
        setTextEnabled(true,1);
        
        this.validate();
    }//GEN-LAST:event_newAdressButtonActionPerformed

    private void cardNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardNumberActionPerformed
        setShowingCard();
    }//GEN-LAST:event_cardNumberActionPerformed

    private void purchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseActionPerformed
               
        System.out.println(IMatDataHandler.getInstance().getCreditCard().getCardType());
        String sum = Model.getShoppingCart().getTotal() + " kr";
        
        if (Model.getShoppingCart().getTotal() != 0) {
            if (newAdressButton.isSelected() && newCardButton.isSelected()){
                
                cardNum = jTextField1.getText() + jTextField2.getText() + 
                            jTextField3.getText() + jTextField4.getText();
                String cardExpiryMonth = jComboBox2.getSelectedItem().toString(); 
                String cardExpiryYear = jComboBox3.getSelectedItem().toString();
                String cardCVC = jTextField9.getText();
                
                if (!validateCard(cardNum, cardExpiryMonth, cardExpiryYear, cardCVC)) {
                    return;
                }
                
                if (jCheckBox1.isSelected() && !jCheckBox2.isSelected()){
                    addressController.newAddress(firstNL.getText(),lastNL.getText(),
                        AddressLabel.getText(),postCodeLab.getText(),cityLabel.getText(),
                        phoneLabel.getText(),cellLabel.getText(), emailLabel.getText());
                    /*
                    String cType = jComboBox1.getSelectedItem().toString();
                    String cName = jTextField10.getText();
                    String cNum = jTextField1.getText() + jTextField2.getText() + jTextField3.getText() + jTextField4.getText();
                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), getAddress(uuid), cType, cName, cNum);
                    */
                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), 
                            getAddress(getAddressByAddress(AddressLabel.getText()).getID()), createTempCard(), sum);
                }
                else if (!jCheckBox1.isSelected() && jCheckBox2.isSelected()){
                    //skapar ett kort
                    paymentController.newCard(jComboBox1.getSelectedItem().toString(), cardNum,
                            jTextField10.getText(), cardExpiryMonth, cardExpiryYear, cardCVC);
                    /*
                    uuid = UUID.randomUUID().toString();
                    String cardNum = jTextField1.getText() + jTextField2.getText() + jTextField3.getText() + jTextField4.getText();
                    CreditCardInstance newCard = new CreditCardInstance(cardNum, 
                        jComboBox1.getSelectedItem().toString(), jTextField10.getText(), 
                        Integer.parseInt(jComboBox2.getSelectedItem().toString()), Integer.parseInt(jComboBox3.getSelectedItem().toString()),
                        Integer.parseInt(jTextField9.getText()), uuid);
                    */               
                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true),
                            createTempAdress(), getCreditCardByNum(cardNum), sum );
                }

                else if(jCheckBox1.isSelected() && jCheckBox2.isSelected()){
                    addressController.newAddress(firstNL.getText(),lastNL.getText(),
                        AddressLabel.getText(),postCodeLab.getText(),cityLabel.getText(),
                        phoneLabel.getText(),cellLabel.getText(), emailLabel.getText());
                    
                    paymentController.newCard(jComboBox1.getSelectedItem().toString(), cardNum,
                            jTextField10.getText(), cardExpiryMonth, cardExpiryYear, cardCVC);

                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), 
                            getAddress(getAddressByAddress(AddressLabel.getText()).getID()), getCreditCardByNum(cardNum), sum );
                }
                else {
                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), 
                            createTempAdress(), createTempCard(), sum );
                }
                IMat.setCenterStage(p1);
            }
            else if(oldAdressButton.isSelected() && newCardButton.isSelected()){

                cardNum = jTextField1.getText() + jTextField2.getText() + 
                            jTextField3.getText() + jTextField4.getText();
                String cardExpiryMonth = jComboBox2.getSelectedItem().toString(); 
                String cardExpiryYear = jComboBox3.getSelectedItem().toString();
                String cardCVC = jTextField9.getText();
                
                if (!validateCard(cardNum, cardExpiryMonth, cardExpiryYear, cardCVC)) {
                    return;
                }
                
                if(jCheckBox2.isSelected()){
                    
                    paymentController.newCard(jComboBox1.getSelectedItem().toString(), cardNum,
                            jTextField10.getText(), cardExpiryMonth, cardExpiryYear, cardCVC);
                    
                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), 
                            getAddressByAddress(selectedAddress.getSelectedItem().toString()), 
                            getCreditCardByNum(cardNum), sum);
                }
                else{
                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), 
                            getAddressByAddress(selectedAddress.getSelectedItem().toString()), 
                            createTempCard(), sum );

                }
                IMat.setCenterStage(p1);

            }
            else if(oldAdressButton.isSelected() && oldCardButton.isSelected()){

                p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), 
                        getAddressByAddress(selectedAddress.getSelectedItem().toString()), 
                        getCreditCardByNum(cardNumber.getSelectedItem().toString()), sum );
                IMat.setCenterStage(p1);
            }
            else if(newAdressButton.isSelected() && oldCardButton.isSelected()){
                if(jCheckBox1.isSelected()){
                    addressController.newAddress(firstNL.getText(),lastNL.getText(),
                        AddressLabel.getText(),postCodeLab.getText(),cityLabel.getText(),
                        phoneLabel.getText(),cellLabel.getText(), emailLabel.getText());
                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), 
                            getAddress(getAddressByAddress(AddressLabel.getText()).getID()), getCreditCardByNum(cardNumber.getSelectedItem().toString()), sum);
                }
                else{
                    p1 = new ThankYouPanel(IMatDataHandler.getInstance().placeOrder(true), 
                            createTempAdress(), createTempCard(), sum );

                }
                IMat.setCenterStage(p1);
            }
        }
        
    }//GEN-LAST:event_purchaseActionPerformed

    private boolean validateCard(String cardNum, String cardExpiryMonth, String cardExpiryYear, String cardCVC) {
        boolean success = true;
        
        if (!paymentController.isCardNumberValid(cardNum)) {
            cardNumberErrorLabel.setText("Ogiltigt kortnummer!");
            success = false;
        } else {
            cardNumberErrorLabel.setText("");
        }
        
        if (!paymentController.isExpiryMonthValid(cardExpiryMonth)) {
            System.out.println("ogiltig månad");
            success = false;
        } else {
            //remove error output
        }
        
        if (!paymentController.isExpiryYearValid(cardExpiryYear)) {
            System.out.println("ogiltigt år");
            success = false;
        } else {
            //remove error output
        }
        
        if (!paymentController.isCVCValid(cardCVC)) {
            cvcErrorLabel.setText("Ogiltig CVC-kod!");
            success = false;
        } else {
            cvcErrorLabel.setText("");
        }
        repaint();
        revalidate();
        return success;
    }

    private void newCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCardButtonActionPerformed
        // TODO add your handling code here:
        clearShowingCard();
        setTextEnabled(true,2);
        this.validate();
    }//GEN-LAST:event_newCardButtonActionPerformed

    private void oldCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldCardButtonActionPerformed
        // TODO add your handling code here:
        cardNumber.setEnabled(true);
        setShowingCard(); 
        cardNumberErrorLabel.setText("");
        cvcErrorLabel.setText("");
        setTextEnabled(false,2);
        this.validate();
    }//GEN-LAST:event_oldCardButtonActionPerformed

    private void lastNLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNLActionPerformed

    private void cityLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityLabelActionPerformed

    private void firstNLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNLActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        IMat.setCenterStage(new ViewHomePanel());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        if(this.jTextField1.getText().length() > 2)
            this.jTextField2.requestFocus();      // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        if(this.jTextField2.getText().length() > 2)
            this.jTextField3.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        if(this.jTextField3.getText().length() > 2)
            this.jTextField4.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        if(this.jTextField4.getText().length() > 2)
            this.jTextField10.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4KeyTyped
    private void clearShowingCard(){
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField10.setText("");
        jTextField9.setText("");
        String[] activeDefault = {"1","2","3","4","5","6","7","8","9","10","11","12"};
        jComboBox2.setModel(new DefaultComboBoxModel(activeDefault));
        String[] activeDefault2 = {"2015","2016","2017","2018","2019","2020"};
        jComboBox3.setModel(new DefaultComboBoxModel(activeDefault2));
        String[] activeDefault3 = {"Visa", "MasterCard"};
        jComboBox1.setModel(new DefaultComboBoxModel(activeDefault3));
    }
    private void clearShowingAddress(){
        firstNL.setText("");
        lastNL.setText("");
        AddressLabel.setText("");
        postCodeLab.setText("");
        cityLabel.setText("");
        cellLabel.setText("");
        phoneLabel.setText("");
        emailLabel.setText("");
    }
    
    private void setShowingCard(){
        id2 = cardNumber.getSelectedItem().toString();
        if(cardNumber.getSelectedItem().toString().isEmpty()){
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
        }
        else {
            numArr = new String[4];
            numArr[0] = id2.substring(0, 3);
            numArr[1] = id2.substring(4, 7);
            numArr[2] = id2.substring(8, 11);
            numArr[3] = id2.substring(12, 16);

            jTextField1.setText(numArr[0]);
            jTextField2.setText(numArr[1]);
            jTextField3.setText(numArr[2]);
            jTextField4.setText(numArr[3]);
        }
        jTextField10.setText(getCreditCardByNum(id2).getHolder());
        jTextField9.setText(Integer.toString(getCreditCardByNum(id2).getCVC()));
        active = new String[1];
        active[0] = (String) Integer.toString(Model.getCreditCardByNum(id2).getExpiryMonth());
        jComboBox2.setModel(new DefaultComboBoxModel(active));
        
        active2 = new String[1];
        active2[0] = (String) Integer.toString(Model.getCreditCardByNum(id2).getExpiryYear());
        jComboBox3.setModel(new DefaultComboBoxModel(active2));
        
        active3 = new String[1];
        active3[0] = Model.getCreditCardByNum(id2).getCardType();
        jComboBox1.setModel(new DefaultComboBoxModel(active3));

    }
    
    private void setShowingAddress(){
        id1 = selectedAddress.getSelectedItem().toString();
        firstNL.setText(getAddressByAddress(id1).getFirstName());
        lastNL.setText(getAddressByAddress(id1).getLastName());
        AddressLabel.setText(getAddressByAddress(id1).getAddress());
        postCodeLab.setText(getAddressByAddress(id1).getPostCode());
        cityLabel.setText(getAddressByAddress(id1).getPostAddress());
        cellLabel.setText(getAddressByAddress(id1).getMobilePhoneNumber());
        phoneLabel.setText(getAddressByAddress(id1).getPhoneNumber());
        emailLabel.setText(getAddressByAddress(id1).getEmail());
        
    }
    private DeliveryAddress createTempAdress(){
        DeliveryAddress d = new DeliveryAddress(firstNL.getText(),lastNL.getText(),
                    AddressLabel.getText(),postCodeLab.getText(),cityLabel.getText(),
                    phoneLabel.getText(),cellLabel.getText(),emailLabel.getText());
        return d;
    }
    private CreditCardInstance createTempCard(){
        CreditCardInstance c = new CreditCardInstance(jTextField1.getText()+jTextField2.getText()+jTextField3.getText()+jTextField4.getText(), 
                    jComboBox1.getSelectedItem().toString(), jTextField10.getText(), 
                    Integer.parseInt(jComboBox2.getSelectedItem().toString()), Integer.parseInt(jComboBox3.getSelectedItem().toString()),
                    Integer.parseInt(jTextField9.getText()));
        return c;
    }
    
    private void setTextEnabled(Boolean t, int i){
        if(i == 1){
            if(t){
                firstNL.setEnabled(true);
                lastNL.setEnabled(true);
                AddressLabel.setEnabled(true);
                postCodeLab.setEnabled(true);
                cityLabel.setEnabled(true);
                phoneLabel.setEnabled(true);
                cellLabel.setEnabled(true);
                emailLabel.setEnabled(true);
                jCheckBox1.setEnabled(true);
            }
            else if (!t){
                firstNL.setEnabled(false);
                lastNL.setEnabled(false);
                AddressLabel.setEnabled(false);
                postCodeLab.setEnabled(false);
                cityLabel.setEnabled(false);
                phoneLabel.setEnabled(false);
                cellLabel.setEnabled(false);
                emailLabel.setEnabled(false);
                jCheckBox1.setEnabled(false);
            }
        }
        else if(i == 2){
            if(t){
                jComboBox1.setEnabled(true);
                jComboBox2.setEnabled(true);
                jComboBox3.setEnabled(true);
                jTextField1.setEnabled(true);
                jTextField2.setEnabled(true);
                jTextField3.setEnabled(true);
                jTextField4.setEnabled(true);
                jTextField9.setEnabled(true);
                jTextField10.setEnabled(true);
                jCheckBox2.setEnabled(true);

            }
            else if(!t){
                jComboBox1.setEnabled(false);
                jComboBox2.setEnabled(false);
                jComboBox3.setEnabled(false);
                jTextField1.setEnabled(false);
                jTextField2.setEnabled(false);
                jTextField3.setEnabled(false);
                jTextField4.setEnabled(false);
                jTextField9.setEnabled(false);
                jTextField10.setEnabled(false);
                jCheckBox2.setEnabled(false);

            }
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressLabel;
    private javax.swing.ButtonGroup addressButtonGroup;
    private javax.swing.JComboBox cardNumber;
    private javax.swing.JLabel cardNumberErrorLabel;
    private javax.swing.JTextField cellLabel;
    private javax.swing.JTextField cityLabel;
    private javax.swing.JLabel cvcErrorLabel;
    private javax.swing.ButtonGroup deliveryButtonGroup;
    private javax.swing.JTextField emailLabel;
    private javax.swing.JTextField firstNL;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField lastNL;
    private javax.swing.JRadioButton newAdressButton;
    private javax.swing.JRadioButton newCardButton;
    private javax.swing.JRadioButton oldAdressButton;
    private javax.swing.JRadioButton oldCardButton;
    private javax.swing.ButtonGroup paymentButtonGroup;
    private javax.swing.JTextField phoneLabel;
    private javax.swing.JTextField postCodeLab;
    private javax.swing.JButton purchase;
    private javax.swing.JComboBox selectedAddress;
    // End of variables declaration//GEN-END:variables

    private void setEnabledDeliveryAdresses(int numOfAdresses) {
        if (numOfAdresses == 0) {
            oldAdressButton.setEnabled(false);
            selectedAddress.setEnabled(false);
            newAdressButton.setEnabled(true);
            newAdressButton.setSelected(true);
            clearShowingAddress();
            setTextEnabled(true,1);
            this.validate();
        } else {
            setShowingAddress();   
        }
    }
    
    private void setEnabledCardAdresses(int numOfCards) {
        if (numOfCards == 0) {
            oldCardButton.setEnabled(false);
            newCardButton.setEnabled(true);
            newCardButton.setSelected(true);
            cardNumber.setEnabled(false);
            clearShowingCard();
            setTextEnabled(true,2);
            this.validate();
        } else {
            setShowingCard();
        }
    }
}
